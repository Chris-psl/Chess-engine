name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
    
    - name: Create Build Directory
      run: mkdir build
    
    - name: Configure CMake
      run: |
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON ..
    
    - name: Build
      run: |
        cd build
        make -j$(nproc)
    
    - name: Run Tests
      run: |
        cd build
        ctest --output-on-failure

  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        brew install cmake
    
    - name: Create Build Directory
      run: mkdir build
    
    - name: Configure CMake
      run: |
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON ..
    
    - name: Build
      run: |
        cd build
        make -j$(sysctl -n hw.ncpu)
    
    - name: Run Tests
      run: |
        cd build
        ctest --output-on-failure

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Create Build Directory
      run: mkdir build
    
    - name: Configure CMake
      run: |
        cd build
        cmake -DBUILD_TESTS=ON ..
    
    - name: Build
      run: |
        cd build
        cmake --build . --config Release
    
    - name: Run Tests
      run: |
        cd build
        ctest -C Release --output-on-failure

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-format clang-tidy
    
    - name: Check Code Formatting
      run: |
        find src include -name "*.cpp" -o -name "*.h" | \
        xargs clang-format --dry-run -Werror || true
    
    - name: Static Analysis
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
        cd ..
        # Note: Will be enabled when source files exist
        # clang-tidy src/**/*.cpp -- -I include/
